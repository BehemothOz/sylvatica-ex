{"mappings":"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","sources":["<anon>","src/main.ts","src/scripts/components.ts","src/scripts/columns.ts","src/scripts/buttons.ts","src/scripts/table.ts"],"sourcesContent":["(() => {\nclass $c5d68ffd5fcc9ca2$var$Spinner extends HTMLElement {\n    connectedCallback() {\n        const shadow = this.attachShadow({\n            mode: \"open\"\n        });\n        const template = document.getElementById(\"spinner-template\");\n        shadow.append(template.content.cloneNode(true));\n    }\n}\nclass $c5d68ffd5fcc9ca2$var$Icon extends HTMLElement {\n    connectedCallback() {\n        const shadow = this.attachShadow({\n            mode: \"open\"\n        });\n        const template = document.getElementById(\"icon-wrapper-template\");\n        shadow.append(template.content.cloneNode(true));\n    }\n}\nclass $c5d68ffd5fcc9ca2$var$Badge extends HTMLElement {\n    connectedCallback() {\n        const shadow = this.attachShadow({\n            mode: \"open\"\n        });\n        const template = document.getElementById(\"badge-template\");\n        shadow.append(template.content.cloneNode(true));\n    }\n}\ncustomElements.define(\"sy-spinner\", $c5d68ffd5fcc9ca2$var$Spinner);\ncustomElements.define(\"sy-icon\", $c5d68ffd5fcc9ca2$var$Icon);\ncustomElements.define(\"sy-badge\", $c5d68ffd5fcc9ca2$var$Badge);\n\n\nfunction $7d054a12c1d6ba04$var$createButton(type, icon) {\n    const button = document.createElement(\"button\");\n    const iconWrapper = document.createElement(\"sy-icon\");\n    button.classList.add(\"button-icon\", type);\n    iconWrapper.append(icon);\n    button.append(iconWrapper);\n    return button;\n}\nfunction $7d054a12c1d6ba04$export$cf36c158a653a556() {\n    const updateIconTemplate = document.getElementById(\"icon-update-template\");\n    const basketIconTemplate = document.getElementById(\"icon-basket-template\");\n    return {\n        update: ()=>{\n            const icon = updateIconTemplate.content.cloneNode(true);\n            return $7d054a12c1d6ba04$var$createButton(\"primary\", icon);\n        },\n        remove: ()=>{\n            const icon = basketIconTemplate.content.cloneNode(true);\n            return $7d054a12c1d6ba04$var$createButton(\"danger\", icon);\n        }\n    };\n}\n\n\nconst $15a6648033506b14$var$buttons = (0, $7d054a12c1d6ba04$export$cf36c158a653a556)();\n/*\n    TODO: move\n*/ function $15a6648033506b14$var$selectDifferenceColor(diff) {\n    if (diff == null) return \"gray\";\n    if (diff.startsWith(\"pre\")) return \"blue\";\n    switch(diff){\n        case \"major\":\n            return \"red\";\n        case \"minor\":\n            return \"orange\";\n        case \"patch\":\n            return \"green\";\n        default:\n            return \"gray\";\n    }\n}\nconst $15a6648033506b14$var$columns = [\n    /**\n     * Package name (dependency name from package.json)\n     */ {\n        title: \"Package\",\n        key: \"name\",\n        render: (rowData)=>{\n            const container = document.createElement(\"div\");\n            container.classList.add(\"package-name\");\n            const badge = document.createElement(\"sy-badge\");\n            const span = document.createElement(\"span\");\n            badge.setAttribute(\"color\", $15a6648033506b14$var$selectDifferenceColor(rowData.diff));\n            span.textContent = rowData.name;\n            container.append(badge, span);\n            return container;\n        }\n    },\n    {\n        title: \"Semver diff\",\n        key: \"diff\",\n        render: (rowData)=>{\n            const span = document.createElement(\"span\");\n            span.classList.add(\"semver-diff\", `${$15a6648033506b14$var$selectDifferenceColor(rowData.diff)}`);\n            span.textContent = rowData.diff ?? \"identical\";\n            return span;\n        }\n    },\n    /**\n     * Versions range allowed for installation (from package.json)\n     */ {\n        title: \"Range\",\n        key: \"range\"\n    },\n    {\n        title: \"Current Version\",\n        key: \"version\"\n    },\n    {\n        title: \"Latest Version\",\n        key: \"latestVersion\"\n    },\n    /**\n     * Link to the package's home page\n     */ {\n        title: \"Homepage\",\n        key: \"homepage\",\n        render: (rowData)=>{\n            try {\n                const url = new URL(rowData.homepage);\n                const link = document.createElement(\"a\");\n                link.classList.add(\"link\");\n                link.setAttribute(\"href\", rowData.homepage);\n                link.setAttribute(\"title\", rowData.homepage);\n                link.textContent = url.hostname;\n                return link;\n            } catch  {\n                return \"\";\n            }\n        }\n    }\n];\nfunction $15a6648033506b14$export$5570d3b32630dd60(options) {\n    if (options.isVisibleButtons) {\n        const buttonsColumn = {\n            title: \"\",\n            key: \"actions\",\n            render: ()=>{\n                const wrapper = document.createElement(\"div\");\n                wrapper.append($15a6648033506b14$var$buttons.update(), $15a6648033506b14$var$buttons.remove());\n                return wrapper;\n            }\n        };\n        return $15a6648033506b14$var$columns.concat(buttonsColumn);\n    }\n    return $15a6648033506b14$var$columns;\n}\n\n\nfunction $33f836c69e88b0fe$var$createTableWrapper() {\n    const wrapper = document.createElement(\"div\");\n    wrapper.classList.add(\"table-wrapper\");\n    return wrapper;\n}\nfunction $33f836c69e88b0fe$var$createHeader(columns) {\n    const header = document.createElement(\"thead\");\n    const headerRow = document.createElement(\"tr\");\n    for (const column of columns){\n        const headerCell = document.createElement(\"th\");\n        headerCell.textContent = column.title;\n        headerRow.append(headerCell);\n    }\n    header.append(headerRow);\n    return header;\n}\nfunction $33f836c69e88b0fe$var$createRow(columns, rowData) {\n    const row = document.createElement(\"tr\");\n    for (const column of columns){\n        const cell = document.createElement(\"td\");\n        cell.setAttribute(\"data-label\", column.title);\n        if (column.className) cell.classList.add(column.className);\n        if (column.render) {\n            const cellValue = column.render(rowData);\n            cell.append(cellValue);\n        } else {\n            const value = rowData[column.key];\n            cell.textContent = value;\n        }\n        row.append(cell);\n    }\n    return row;\n}\nfunction $33f836c69e88b0fe$var$createRows(columns, payload) {\n    const body = document.createElement(\"tbody\");\n    for (const rowData of payload){\n        const row = $33f836c69e88b0fe$var$createRow(columns, rowData);\n        body.append(row);\n    }\n    return body;\n}\nfunction $33f836c69e88b0fe$var$createTableTitle() {\n    const title = document.createElement(\"h2\");\n    title.textContent = \"Dependencies\";\n    return title;\n}\nfunction $33f836c69e88b0fe$var$createTableContainer() {\n    const container = document.createElement(\"section\");\n    const title = $33f836c69e88b0fe$var$createTableTitle();\n    container.classList.add(\"table-section\");\n    container.append(title);\n    return container;\n}\nfunction $33f836c69e88b0fe$export$4e1d9a3b5c360fd3(columns, payload) {\n    const container = $33f836c69e88b0fe$var$createTableContainer();\n    const wrapper = $33f836c69e88b0fe$var$createTableWrapper();\n    const table = document.createElement(\"table\");\n    const header = $33f836c69e88b0fe$var$createHeader(columns);\n    const rows = $33f836c69e88b0fe$var$createRows(columns, payload);\n    table.append(header, rows);\n    wrapper.append(table);\n    container.append(wrapper);\n    return container;\n}\n\n\n/*\n    https://uit.stanford.edu/accessibility/concepts/tables/css-aria\n    https://adrianroselli.com/2017/11/a-responsive-accessible-table.html\n\n    https://habr.com/ru/articles/546980/\n    https://learn.javascript.ru/webcomponents-intro\n*/ /*\n    # Mock for test\n    const data: Array<Package> = [\n        {\n            name: 'axios',\n            diff: 'major',\n            range: '^1.2.0',\n            version: '1.2.4',\n            lastVersion: '3.0.1',\n            homepage: 'https://www.google.com',\n        },\n    ];\n\n    const columns = createColumns({ isVisibleButtons: false });\n    root.append(generateTable(columns, data));\n*/ const $8b92a9e94badc9da$var$root = document.getElementById(\"root\");\nwindow.addEventListener(\"message\", (event)=>{\n    const { type: type, payload: payload } = event.data;\n    switch(type){\n        case \"INITIALIZATION\":\n            console.log(\"INITIALIZATION\");\n            break;\n        case \"DEPENDENCIES\":\n            {\n                const columns = (0, $15a6648033506b14$export$5570d3b32630dd60)({\n                    isVisibleButtons: false\n                });\n                $8b92a9e94badc9da$var$root.append((0, $33f836c69e88b0fe$export$4e1d9a3b5c360fd3)(columns, event.data.data));\n                break;\n            }\n        case \"DEV_DEPENDENCIES\":\n            {\n                console.log(event);\n                const columns = (0, $15a6648033506b14$export$5570d3b32630dd60)({\n                    isVisibleButtons: false\n                });\n                $8b92a9e94badc9da$var$root.append((0, $33f836c69e88b0fe$export$4e1d9a3b5c360fd3)(columns, event.data.data));\n                break;\n            }\n        case \"PACKAGE_MANAGER_DETECTED\":\n            console.log(\"PACKAGE_MANAGER_DETECTED\");\n            break;\n    }\n});\n\n})();\n//# sourceMappingURL=main.js.map\n","import './scripts/components';\n\nimport { createColumns } from './scripts/columns';\nimport { generateTable } from './scripts/table';\n\n/*\n    https://uit.stanford.edu/accessibility/concepts/tables/css-aria\n    https://adrianroselli.com/2017/11/a-responsive-accessible-table.html\n\n    https://habr.com/ru/articles/546980/\n    https://learn.javascript.ru/webcomponents-intro\n*/\n\n/*\n    # Mock for test\n    const data: Array<Package> = [\n        {\n            name: 'axios',\n            diff: 'major',\n            range: '^1.2.0',\n            version: '1.2.4',\n            lastVersion: '3.0.1',\n            homepage: 'https://www.google.com',\n        },\n    ];\n\n    const columns = createColumns({ isVisibleButtons: false });\n    root.append(generateTable(columns, data));\n*/\n\nconst root = document.getElementById('root') as HTMLDivElement;\n\nwindow.addEventListener('message', (event) => {\n    const { type, payload } = event.data;\n\n    switch (type) {\n        case 'INITIALIZATION': {\n            console.log('INITIALIZATION');\n            break;\n        }\n        case 'DEPENDENCIES': {\n            const columns = createColumns({ isVisibleButtons: false });\n            root.append(generateTable(columns, event.data.data));\n            break;\n        }\n        case 'DEV_DEPENDENCIES': {\n            console.log(event);\n            const columns = createColumns({ isVisibleButtons: false });\n            root.append(generateTable(columns, event.data.data));\n            break;\n        }\n        case 'PACKAGE_MANAGER_DETECTED': {\n            console.log('PACKAGE_MANAGER_DETECTED');\n            break;\n        }\n    }\n});\n","class Spinner extends HTMLElement {\n    connectedCallback() {\n        const shadow = this.attachShadow({ mode: 'open' });\n        const template = document.getElementById('spinner-template') as HTMLTemplateElement;\n\n        shadow.append(template.content.cloneNode(true));\n    }\n}\n\nclass Icon extends HTMLElement {\n    connectedCallback() {\n        const shadow = this.attachShadow({ mode: 'open' });\n        const template = document.getElementById('icon-wrapper-template') as HTMLTemplateElement;\n\n        shadow.append(template.content.cloneNode(true));\n    }\n}\n\nclass Badge extends HTMLElement {\n    connectedCallback() {\n        const shadow = this.attachShadow({ mode: 'open' });\n        const template = document.getElementById('badge-template') as HTMLTemplateElement;\n\n        shadow.append(template.content.cloneNode(true));\n    }\n}\n\ncustomElements.define('sy-spinner', Spinner);\ncustomElements.define('sy-icon', Icon);\ncustomElements.define('sy-badge', Badge);\n","import { Column, ReleaseType } from './types';\nimport { createButtons } from './buttons';\n\ninterface ColumnOptions {\n    isVisibleButtons: boolean;\n}\n\nconst buttons = createButtons();\n\n/*\n    TODO: move\n*/\nfunction selectDifferenceColor(diff: ReleaseType) {\n    if (diff == null) return 'gray';\n    if (diff.startsWith('pre')) return 'blue';\n\n    switch (diff) {\n        case 'major':\n            return 'red';\n        case 'minor':\n            return 'orange';\n        case 'patch':\n            return 'green';\n        default:\n            return 'gray';\n    }\n}\n\nconst columns: Array<Column> = [\n    /**\n     * Package name (dependency name from package.json)\n     */\n    {\n        title: 'Package',\n        key: 'name',\n        render: (rowData) => {\n            const container = document.createElement('div');\n            container.classList.add('package-name');\n\n            const badge = document.createElement('sy-badge');\n            const span = document.createElement('span');\n\n            badge.setAttribute('color', selectDifferenceColor(rowData.diff));\n            span.textContent = rowData.name;\n\n            container.append(badge, span);\n\n            return container;\n        },\n    },\n    {\n        title: 'Semver diff',\n        key: 'diff',\n        render: (rowData) => {\n            const span = document.createElement('span');\n\n            span.classList.add('semver-diff', `${selectDifferenceColor(rowData.diff)}`);\n            span.textContent = rowData.diff ?? 'identical';\n\n            return span;\n        },\n    },\n    /**\n     * Versions range allowed for installation (from package.json)\n     */\n    {\n        title: 'Range',\n        key: 'range',\n        // className: 'range',\n    },\n    {\n        title: 'Current Version',\n        key: 'version',\n    },\n    {\n        title: 'Latest Version',\n        key: 'latestVersion',\n    },\n    /**\n     * Link to the package's home page\n     */\n    {\n        title: 'Homepage',\n        key: 'homepage',\n        render: (rowData) => {\n            try {\n                const url = new URL(rowData.homepage);\n                const link = document.createElement('a');\n\n                link.classList.add('link');\n                link.setAttribute('href', rowData.homepage);\n                link.setAttribute('title', rowData.homepage);\n\n                link.textContent = url.hostname;\n\n                return link;\n            } catch {\n                return '';\n            }\n        },\n    },\n];\n\nexport function createColumns(options: ColumnOptions) {\n    if (options.isVisibleButtons) {\n        const buttonsColumn: Column = {\n            title: '',\n            key: 'actions',\n            render: () => {\n                const wrapper = document.createElement('div');\n                wrapper.append(buttons.update(), buttons.remove());\n\n                return wrapper;\n            },\n        };\n\n        return columns.concat(buttonsColumn);\n    }\n\n    return columns;\n}\n","type ButtonType = 'primary' | 'danger';\n\nfunction createButton(type: ButtonType, icon: Node) {\n    const button = document.createElement('button');\n    const iconWrapper = document.createElement('sy-icon');\n\n    button.classList.add('button-icon', type);\n\n    iconWrapper.append(icon);\n    button.append(iconWrapper);\n\n    return button;\n}\n\nexport function createButtons() {\n    const updateIconTemplate = document.getElementById('icon-update-template') as HTMLTemplateElement;\n    const basketIconTemplate = document.getElementById('icon-basket-template') as HTMLTemplateElement;\n\n    return {\n        update: () => {\n            const icon = updateIconTemplate.content.cloneNode(true);\n            return createButton('primary', icon);\n        },\n        remove: () => {\n            const icon = basketIconTemplate.content.cloneNode(true);\n            return createButton('danger', icon);\n        },\n    };\n}\n","import { Column, Package } from './types';\n\nfunction createTableWrapper() {\n    const wrapper = document.createElement('div');\n    wrapper.classList.add('table-wrapper');\n\n    return wrapper;\n}\n\nfunction createHeader(columns: Array<Column>) {\n    const header = document.createElement('thead');\n    const headerRow = document.createElement('tr');\n\n    for (const column of columns) {\n        const headerCell = document.createElement('th');\n        headerCell.textContent = column.title;\n\n        headerRow.append(headerCell);\n    }\n\n    header.append(headerRow);\n    return header;\n}\n\nfunction createRow(columns: Array<Column>, rowData: Package) {\n    const row = document.createElement('tr');\n\n    for (const column of columns) {\n        const cell = document.createElement('td');\n\n        cell.setAttribute('data-label', column.title);\n\n        if (column.className) {\n            cell.classList.add(column.className);\n        }\n\n        if (column.render) {\n            const cellValue = column.render(rowData);\n            cell.append(cellValue);\n        } else {\n            const value = rowData[column.key];\n            cell.textContent = value;\n        }\n\n        row.append(cell);\n    }\n\n    return row;\n}\n\nfunction createRows(columns: Array<Column>, payload: Array<Package>) {\n    const body = document.createElement('tbody');\n\n    for (const rowData of payload) {\n        const row = createRow(columns, rowData);\n        body.append(row);\n    }\n\n    return body;\n}\n\nfunction createTableTitle() {\n    const title = document.createElement('h2');\n    title.textContent = 'Dependencies';\n\n    return title;\n}\n\nfunction createTableContainer() {\n    const container = document.createElement('section');\n    const title = createTableTitle();\n\n    container.classList.add('table-section');\n    container.append(title);\n\n    return container;\n}\n\nexport function generateTable(columns: Array<Column>, payload: Array<Package>) {\n    const container = createTableContainer();\n    const wrapper = createTableWrapper();\n\n    const table = document.createElement('table');\n\n    const header = createHeader(columns);\n    const rows = createRows(columns, payload);\n\n    table.append(header, rows);\n    wrapper.append(table);\n    container.append(wrapper);\n\n    return container;\n}\n"],"names":["$c5d68ffd5fcc9ca2$var$Spinner","HTMLElement","connectedCallback","shadow","attachShadow","mode","template","document","getElementById","append","content","cloneNode","$c5d68ffd5fcc9ca2$var$Icon","$c5d68ffd5fcc9ca2$var$Badge","$7d054a12c1d6ba04$var$createButton","type","icon","button","createElement","iconWrapper","classList","add","customElements","define","$15a6648033506b14$var$buttons","updateIconTemplate","basketIconTemplate","update","remove","$15a6648033506b14$var$selectDifferenceColor","diff","startsWith","$15a6648033506b14$var$columns","title","key","render","rowData","container","badge","span","setAttribute","textContent","name","url","URL","homepage","link","hostname","$15a6648033506b14$export$5570d3b32630dd60","options","isVisibleButtons","concat","wrapper","$33f836c69e88b0fe$export$4e1d9a3b5c360fd3","columns","payload","$33f836c69e88b0fe$var$createTableContainer","$33f836c69e88b0fe$var$createTableTitle","$33f836c69e88b0fe$var$createTableWrapper","table","header","$33f836c69e88b0fe$var$createHeader","headerRow","column","headerCell","rows","$33f836c69e88b0fe$var$createRows","body","row","$33f836c69e88b0fe$var$createRow","cell","className","cellValue","value","$8b92a9e94badc9da$var$root","window","addEventListener","event","data","console","log"],"version":3,"file":"main.js.map"}